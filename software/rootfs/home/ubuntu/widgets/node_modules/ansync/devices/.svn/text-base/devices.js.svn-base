var an2002 = require("./an2002"),
    an2003 = require("./an2003"),
    an2006 = require("./an2006"),
    an2006an = require("./an2006an"),
    an2012 = require("./an2012"),
    an2016 = require("./an2016");
    an2053 = require("./an2053");

channelArrayValidForModel = function(model, channels) {
    for (var i = 0; i < channels.length; i++) {
        if (!channelValidForModel(model, channels[i])) {
            return false;
        }
    }

    return true;
}

channelValidForModel = function(model, channel) {
    switch(model.toUpperCase()) {
        case "AN2002":
            return (channel >= 1 && channel <= 9);
        case "AN2003":
        case "AN2006":
        case "AN2006an":
            return (channel >= 1 && channel <= 16);
        case "AN2012":
            return (channel >= 1 && channel <= 2);
        case "AN2016":
            return (channel >= 1 && channel <= 5);
        case "AN2053":
            return (channel == 1);
        default:
            return false;
    }
}

rangeValidForModel = function(model, channel, min, max) {
    switch(model.toUpperCase()) {
        case "AN2012":
            if (channel >= 1 && channel <= 2) {
                return (min >= 0 && max <= 6);
            }
        case "AN2053":
            if (channel == 1) {
                return (min >= -1.0 && max <= 1.0);
            }
        default:
            return false;
    }
}

getDevice = function(serial, alias, model, logger) {
    var device = {};

    switch(model.toUpperCase()) {
        case "AN2002":
            device = new an2002.AN2002(serial, alias, logger);
            break;
        case "AN2003":
            device = new an2003.AN2003(serial, alias, logger);
            break;
        case "AN2006":
            device = new an2006.AN2006(serial, alias, logger);
        case "AN2006an":
            device = new an2006an.AN2006AN(serial, alias, logger);
            break;
        case "AN2012":
            device = new an2012.AN2012(serial, alias, logger);
            break;
        case "AN2016":
            device = new an2016.AN2016(serial, alias, logger);
            break;
        case "AN2053":
            device = new an2053.AN2053(serial, alias, logger);
            break;
        default:
            device = new Error("Unknown or unsupported model: " + model);
            break;
    }

    return device;
}

module.exports.getDevice = getDevice;
module.exports.channelArrayValidForModel = channelArrayValidForModel;
module.exports.channelValidForModel = channelValidForModel;
module.exports.AN2002 = an2002;
module.exports.AN2003 = an2003;
module.exports.AN2006 = an2006;
module.exports.AN2006AN = an2006an;
module.exports.AN2012 = an2012;
module.exports.AN2016 = an2016;
module.exports.AN2053 = an2053;
