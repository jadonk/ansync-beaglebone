var util = require('util');
var events = require('events');
var Vita = require('./build/Release/vita').Vita;

for (var k in events.EventEmitter.prototype) {
	Vita.prototype[k] = events.EventEmitter.prototype[k];
}

Vita.prototype._receive = function(err, data) {
	if (err)  { 
		this.emit('error', err);
		return this.close();
	}

	this.emit('data', data);
};

Vita.prototype.startAgent = function(a, b, speed, cb) {
	cb = cb || this._receive.bind(this);
	this.addAgent(a, b, speed, cb);
};

module.exports = Vita;

module.exports.create = function(device) {
	throw new Error("Use vita.open instead.");
}

module.exports.open = function(device, cb) {
	if (!cb) return new Vita(device);

	try {
		var result = new Vita(device);
		
	} catch (e) {
		cb(e, undefined);
		return undefined;
	}
	
	cb(undefined, result);
	return result;
}
