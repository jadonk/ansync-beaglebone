var fs = require('fs')
	,routes = {};


//* Load all the modules in current dir
var files = fs.readdirSync(__dirname);
for (var i = 0; i < files.length; i++) {

	var file = files[i];

	if (!file.match(/\.js$/) || file[0] == '.') {
		continue;
	}

	var temp = require('./' + file);

	// if module is a function, create a key for it named after the file minus extension
	if (!(isType(temp, 'object'))) {
		console.log('loading:' + file);
		file = file.substr(0, file.indexOf('.'));
		if (routes[file]) throw new Error('module already exists');
		routes[file] = temp;
	} else {

		// merge the routes from the files found
		for (x in temp) {
			console.log('loading:' + x + ' of ' + file);
			if (routes[x]) throw new Error('function already exists');
			routes[x] = temp[x];
		}
	}
}

module.exports = routes;

function isType(arg, type) {
    type = type.charAt(0).toUpperCase() + type.substr(1);
    return Object.prototype.toString.call(arg) == '[object ' + type + ']';
}
